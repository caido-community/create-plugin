name: Publish

on:
  push:
    branches:
      - 'main'

env:
  NODE_VERSION: 20
  PNPM_VERSION: 9

jobs:
  publish-js:
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: Checkout project
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0

      - name: Setup Node.js
        uses: actions/setup-node@a0853c24544627f65ddf259abe73b1d18a591444 #v5.0.0
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup pnpm
        uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda #v4.1.0
        with:
          version: ${{ env.PNPM_VERSION }}
          run_install: false

      - name: Install
        run: pnpm install

      - name: Build
        run: pnpm build

      - name: Publish
        shell: bash
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          # Read the current version from package.json
          CURRENT_VERSION=$(jq -r '.version' ./package.json)

          # Check if the version contains "-beta"
          if [[ "$CURRENT_VERSION" == *"-beta"* ]]; then
            echo "Publishing $CURRENT_VERSION as beta tag"
            pnpm --filter create-plugin -r publish --access public --tag beta
          else
            echo "Publishing $CURRENT_VERSION as latest tag"
            pnpm --filter create-plugin -r publish --access public
          fi